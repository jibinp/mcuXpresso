/*
===============================================================================
 Name        : proj_jibin_QueuefreertosBlink.c
 Author      : $(jibin)
 Version     :
 Copyright   : $(copyright)
 Description : Queue freeRTOS Blink
===============================================================================
*/

//Defining the headers
#include "board.h"
#include "FreeRTOS.h"
#include "task.h"
#include "timers.h"
#include "queue.h"
#include "math.h"
#include "semphr.h"

xSemaphoreHandle xMutex;

//Clearing the LEDs
void clearLEDs(void)
	{
	Board_LED_Set(0, true);
	Board_LED_Set(1, true);
	Board_LED_Set(2, true);
	}

//Seting up the hardware
static void prvSetupHardware(void)
	{
	SystemCoreClockUpdate();
	Board_Init();
	//At the start all the leds are off
	clearLEDs();
	}

static void prvNewPrintString( const char *pcString )
	{
	  xSemaphoreTake( xMutex, portMAX_DELAY );
		  {
		  printf( "%s", pcString );
		  fflush( stdout );
		  /* The mutex MUST be given back! */
		  }
	 xSemaphoreGive( xMutex );
	}

static void prvPrintTask( void *pvParameters )
	{
	char *pcStringToPrint;
//	const TickType_t xMaxBlockTimeTicks = 0x20;
	 pcStringToPrint = ( char * ) pvParameters;
	 for( ;; )
		 {
		 prvNewPrintString( pcStringToPrint );
		 vTaskDelay( ( rand() % xMaxBlockTimeTicks ) );
		 }
	}

int main( void )
	{
	xMutex = xSemaphoreCreateMutex();
	 if( xMutex != NULL )
		 {
		  xTaskCreate( prvPrintTask, "Print1", 1000,
		 "Task 1 ***************************************\r\n", 1, NULL );
		 xTaskCreate( prvPrintTask, "Print2", 1000,
		 "Task 2 ---------------------------------------\r\n", 2, NULL );
		 /* Start the scheduler so the created tasks start executing. */
		 vTaskStartScheduler();
		 }

	 for( ;; );
	}
