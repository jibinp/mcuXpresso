/*
===============================================================================
 Name        : proj_jibin_freertosBlink01.c
 Author      : $(jibin)
 Version     :
 Copyright   : $(copyright)
 Description : main definition
===============================================================================
*/

#include "board.h"
#include "FreeRTOS.h"
#include "task.h"
#include "timers.h"
#include "queue.h"


#define TICKRATE_HZ1 (8)

int timeCount = 0;

void TIMER0_IRQHandler(void)
	{
	if (Chip_TIMER_MatchPending(LPC_TIMER0, 1))
		{
		Chip_TIMER_ClearMatch(LPC_TIMER0, 1);
		Board_LED_Toggle(0);
		printf("%d\n" , timeCount);
		timeCount ++;
		}
	}

void timerSet(void)
	{
	uint32_t timerFreq;

	/* Generic Initialization */

	/* Enable timer 1 clock */
	Chip_TIMER_Init(LPC_TIMER0);

	/* Timer rate is system clock rate */
	timerFreq = Chip_Clock_GetSystemClockRate();

	/* Timer setup for match and interrupt at TICKRATE_HZ */
	Chip_TIMER_Reset(LPC_TIMER0);
	Chip_TIMER_MatchEnableInt(LPC_TIMER0, 1);
	Chip_TIMER_SetMatch(LPC_TIMER0, 1, (timerFreq / TICKRATE_HZ1));
	Chip_TIMER_ResetOnMatchEnable(LPC_TIMER0, 1);
	Chip_TIMER_Enable(LPC_TIMER0);

	/* Enable timer interrupt */
	NVIC_ClearPendingIRQ(TIMER0_IRQn);
	NVIC_EnableIRQ(TIMER0_IRQn);
	}

int main(void)
	{
	uint32_t timerFreq;

	/* Generic Initialization */
	SystemCoreClockUpdate();
	Board_Init();
	}
